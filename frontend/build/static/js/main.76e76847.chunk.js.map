{"version":3,"sources":["components/TodoForm.js","config/axiosconfig.js","components/Collapsible.js","components/Todo.js","components/Todolist.js","components/ListComponent.js","components/SortComponent.js","App.js","index.js"],"names":["TodoForm","props","priorityValues","inputChange","e","onInputChange","checkPriorityValue","value","todoFormState","priority","className","onChange","name","type","required","htmlFor","date","id","checked","list","description","onClick","preventDefault","onFormSubmit","submitButtonLabel","onFormCancel","instance","axios","create","baseURL","Collapsible","header","isOpen","children","CustomButton","label","icon","Todo","todo","todoHandler","collapsibleStates","isdone","find","collapse","stopPropagation","complete","edit","delete","TodoList","todos","todoItems","map","ListComponent","useState","isLoaded","setIsLoaded","statusMessage","setStatusMessage","lists","setLists","tasks","setTasks","forEach","includes","push","useEffect","get","then","res","catch","err","response","data","hasOwnProperty","fetch","generateLists","listItem","filtered","filter","SortButtonLabel","SortButton","SortButtonListComponent","sortAscending","setSortAscending","previouslyClicked","setPreviouslyClicked","tasklist","slice","updateTasklist","sort","a","b","localeCompare","Date","handleClick","buttonLabel","todoFormButtonLabel","App","handleTodoFormInputChange","event","target","state","setState","handleSubmit","todoFormSubmitButtonLabel","indexOfEditedTodo","findIndex","element","obj","concat","resetTodoFormState","handleCancel","todoformstate","Math","random","handleSort","sortedTodos","item","listid","date_deadline","is_done","created","date_created","collapsibleStateObject","todoId","temp","el","console","log","idx","x","todoToEdit","descritpion","this","SortComponent","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76e76847.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const priorityValues = {\r\n    LOW: '3',\r\n    MEDIUM: '2',\r\n    HIGH: '1',\r\n  };\r\n\r\n  const inputChange = (e) => {\r\n    props.onInputChange(e);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (props.todoFormState.name === '') return;\r\n    props.onFormSubmit(props.todoFormState);\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    props.onFormCancel();\r\n  };\r\n\r\n  const checkPriorityValue = (value) => {\r\n    return props.todoFormState.priority === value;\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <h3>Add Deadline</h3>\r\n      <div className='input-animation'>\r\n        <input\r\n          onChange={inputChange}\r\n          name='name'\r\n          value={props.todoFormState.name}\r\n          type='text'\r\n          required\r\n        />\r\n        <label htmlFor='name' className='label-name'>\r\n          <span className='content-name'>Name</span>\r\n        </label>\r\n      </div>\r\n      <div className='input-animation'>\r\n        <input\r\n          onChange={inputChange}\r\n          name='date'\r\n          type='date'\r\n          value={props.todoFormState.date}\r\n          required\r\n        />\r\n        <label htmlFor='date' className='label-name'>\r\n          <span className='content-name'>Date</span>\r\n        </label>\r\n      </div>\r\n\r\n      <div id='priority'>\r\n        <label>\r\n          Priority\r\n          <div className='radio-container'>\r\n            <input\r\n              type='radio'\r\n              id='low'\r\n              name='priority'\r\n              value={priorityValues.LOW}\r\n              checked={checkPriorityValue(priorityValues.LOW)}\r\n              onChange={inputChange}\r\n            />\r\n            <label htmlFor='low' className='radio'>\r\n              Low\r\n            </label>\r\n            <input\r\n              type='radio'\r\n              id='medium'\r\n              name='priority'\r\n              value={priorityValues.MEDIUM}\r\n              checked={checkPriorityValue(priorityValues.MEDIUM)}\r\n              onChange={inputChange}\r\n            />\r\n            <label htmlFor='medium' className='radio'>\r\n              Medium\r\n            </label>\r\n            <input\r\n              type='radio'\r\n              id='high'\r\n              name='priority'\r\n              value={priorityValues.HIGH}\r\n              checked={checkPriorityValue(priorityValues.HIGH)}\r\n              onChange={inputChange}\r\n            />\r\n            <label htmlFor='high' className='radio'>\r\n              High\r\n            </label>\r\n          </div>\r\n        </label>\r\n      </div>\r\n      <div className='input-animation'>\r\n        <input\r\n          onChange={inputChange}\r\n          name='list'\r\n          type='text'\r\n          value={props.todoFormState.list}\r\n          required\r\n        />\r\n        <label htmlFor='list' className='label-name'>\r\n          <span className='content-name'>Task List</span>\r\n        </label>\r\n      </div>\r\n      <div className='input-animation'>\r\n        <input\r\n          onChange={inputChange}\r\n          name='description'\r\n          type='text'\r\n          value={props.todoFormState.description}\r\n          required\r\n        />\r\n        <label htmlFor='description' className='label-name'>\r\n          <span className='content-name'>Description</span>\r\n        </label>\r\n      </div>\r\n      <div className='submitbuttons'>\r\n        <button\r\n          onClick={handleSubmit}\r\n          id='submit'\r\n          className='form-button'\r\n          type='submit'\r\n        >\r\n          {props.submitButtonLabel}\r\n        </button>\r\n        <button\r\n          onClick={handleCancel}\r\n          id='cancel'\r\n          className='form-button'\r\n          type='submit'\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import axios from 'axios';\r\n// Heroku url:\r\n// https://tamk-4a00ez62-3001-group11.herokuapp.com/api\r\nconst config = {\r\n  baseURL: 'https://tamk-4a00ez62-3001-group11.herokuapp.com/api',\r\n};\r\nconst instance = axios.create(config);\r\n\r\nexport default instance;\r\n","import React from 'react';\r\n\r\n/*\r\n  Collapsible is a simple wrapper to allow showing/hiding of content.\r\n  Collapsible's header prop is the content which is always visible,\r\n  the 'header' or 'toggler' part of the component.\r\n  This 'header' element can be clicked to toggle the collapsible content.\r\n*/\r\nfunction Collapsible(props) {\r\n  const handleClick = () => {\r\n    props.onClick(props.id);\r\n  };\r\n\r\n  return (\r\n    <div className='collapsible'>\r\n      <div className='collapsible-header' onClick={handleClick}>\r\n        {props.header}\r\n      </div>\r\n      <div\r\n        className={\r\n          props.isOpen ? 'collapsible-content' : 'collapsible-content collapsed'\r\n        }\r\n      >\r\n        {props.isOpen ? props.children : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Collapsible;\r\n","import React from 'react';\r\nimport Collapsible from './Collapsible';\r\n\r\nconst Todo = ({ todo, todoHandler, collapsibleStates }) => {\r\n  const removeItem = () => {\r\n    // Filtering happens now in App.js as TodoComponent now has only\r\n    // todos from certain list\r\n    todoHandler.delete(todo.id);\r\n  };\r\n\r\n  const markCompleted = (e) => {\r\n    // Prevents task from collapsing when clicking the checkmark button.\r\n    e.stopPropagation();\r\n    todoHandler.complete(todo.id);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    todoHandler.edit(todo);\r\n  };\r\n\r\n  const setClassNameDependingOnIsDoneStatus = () => {\r\n    return todo.isdone ? 'todo-item completed' : 'todo-item';\r\n  };\r\n\r\n  const setCollapsed = () => {\r\n    let collapsibleState = collapsibleStates.find(({ id }) => id === todo.id);\r\n    return collapsibleState.isOpen;\r\n  };\r\n\r\n  return (\r\n    <li className={setClassNameDependingOnIsDoneStatus()}>\r\n      <Collapsible\r\n        id={todo.id}\r\n        isOpen={setCollapsed()}\r\n        onClick={todoHandler.collapse}\r\n        header={\r\n          <>\r\n            <p className='todo-priority'>{todo.priority}</p>\r\n            <p className='todo-date'>{todo.date}</p>\r\n            <p className='todo-name'>{todo.name}</p>\r\n            <CustomButton\r\n              className='btn-flat task-completed'\r\n              onClick={markCompleted}\r\n              icon='fas fa-check'\r\n            />\r\n          </>\r\n        }\r\n      >\r\n        <div className='toolbar'>\r\n          <p>This needs serious work</p>\r\n          <CustomButton\r\n            id='edit'\r\n            className='btn py-05'\r\n            onClick={handleEdit}\r\n            label='Edit'\r\n            icon='fas fa-edit'\r\n          />\r\n          <CustomButton\r\n            id='delete'\r\n            className='btn py-05'\r\n            onClick={removeItem}\r\n            label='Delete'\r\n            icon='fas fa-trash'\r\n          />\r\n        </div>\r\n        <div>\r\n          <p>Description:</p>\r\n          <p className='todo-description'>{todo.description}</p>\r\n        </div>\r\n      </Collapsible>\r\n    </li>\r\n  );\r\n};\r\n\r\n// Change later to a more permanent solution\r\nfunction CustomButton(props) {\r\n  return (\r\n    <button id={props.id} className={props.className} onClick={props.onClick}>\r\n      {props.label}\r\n      <i className={props.icon}></i>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\n// Import components\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ todos, todoHandler, collapsibleStates }) => {\r\n  const todoItems = todos.map((todo) => {\r\n    return (\r\n      <Todo\r\n        key={todo.id}\r\n        todo={todo}\r\n        todoHandler={todoHandler}\r\n        collapsibleStates={collapsibleStates}\r\n      />\r\n    );\r\n  });\r\n  return <div className='list'>{todoItems}</div>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from '../config/axiosconfig';\r\n// Import components\r\nimport TodoList from './Todolist';\r\n\r\nconst ListComponent = ({ todos, todoHandler, collapsibleStates }) => {\r\n  const [isLoaded, setIsLoaded] = useState(null);\r\n  const [statusMessage, setStatusMessage] = useState('Fetching data...');\r\n  const [lists, setLists] = useState({});\r\n  const [tasks, setTasks] = useState({});\r\n  const list = [];\r\n  todos.forEach((todo) => {\r\n    if (!list.includes(todo.list)) {\r\n      list.push(todo.list);\r\n    }\r\n  });\r\n\r\n  // Fetch todos and lists\r\n  useEffect(() => {\r\n    axios\r\n      .get('/lists')\r\n      .then((res) => {\r\n        setLists(res);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          setLists(err.response.data);\r\n        } else {\r\n          setStatusMessage('ERROR: Could not reach the API.');\r\n          throw err;\r\n        }\r\n      });\r\n\r\n    axios\r\n      .get('/todos')\r\n      .then((res) => {\r\n        setTasks(res);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          setTasks(err.response.data);\r\n        } else {\r\n          setStatusMessage('ERROR: Could not reach the API.');\r\n          throw err;\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  // Send fetched todos and lists to parent\r\n  useEffect(() => {\r\n    // Only run this if both lists and tasks have been fetched successfully.\r\n    if (lists.hasOwnProperty('data') && tasks.hasOwnProperty('data')) {\r\n      setIsLoaded(true);\r\n      todoHandler.fetch(lists.data, tasks.data);\r\n    }\r\n  }, [todoHandler, lists, tasks]);\r\n\r\n  const generateLists = list.map((listItem) => {\r\n    const filtered = todos.filter((todo) => todo.list === listItem);\r\n    // Change key to listid once refactored\r\n    return (\r\n      <ul key={listItem}>\r\n        <h3>{listItem}</h3>\r\n        <TodoList\r\n          todos={filtered}\r\n          todoHandler={todoHandler}\r\n          collapsibleStates={collapsibleStates}\r\n        />\r\n      </ul>\r\n    );\r\n  });\r\n\r\n  if (!isLoaded) {\r\n    return <div className='list'>{statusMessage}</div>;\r\n  } else {\r\n    return <div className='list'>{generateLists}</div>;\r\n  }\r\n};\r\n\r\nexport default ListComponent;\r\n","import React, { useState, useEffect } from 'react';\n\nconst SortButtonLabel = {\n  ISDONE: 'Completed',\n  DATE: 'Date',\n  NAME: 'Name',\n  PRIORITY: 'Priority',\n};\n\nfunction SortButton(props) {\n  const handleClick = (e) => {\n    props.onClick(props.label);\n  };\n\n  return (\n    <button className='btn py-05' onClick={handleClick}>\n      {props.label}\n    </button>\n  );\n}\n\nfunction SortButtonListComponent(props) {\n  const [sortAscending, setSortAscending] = useState(true);\n  const [previouslyClicked, setPreviouslyClicked] = useState(null);\n\n  const tasklist = props.tasklist.slice();\n  const updateTasklist = props.updateTasklist;\n\n  // Sort handling\n  useEffect(() => {\n    tasklist.sort((a, b) => {\n      if (a.list !== b.list) {\n        return a.list.localeCompare(b.list);\n      } else {\n        switch (previouslyClicked) {\n          case SortButtonLabel.DATE:\n            // Nulls are sorted in 'reverse' order, it\n            // seems more logical this way, as now closest\n            // dates are first, not nulls.\n            return sortAscending\n              ? (a.date === null) - (b.date === null) ||\n                  new Date(a.date) - new Date(b.date)\n              : (b.date === null) - (a.date === null) ||\n                  new Date(b.date) - new Date(a.date);\n          case SortButtonLabel.NAME:\n            return sortAscending\n              ? a.name.localeCompare(b.name)\n              : b.name.localeCompare(a.name);\n          case SortButtonLabel.PRIORITY:\n            // Value 0 for priority is also sorted in reverse\n            // order, for similar reasons as date null sorting.\n            // Value 0 represents 'no priority', so shouldn't\n            // be shown before 1, which is the highest priority.\n            return sortAscending\n              ? (a.priority === 0) - (b.priority === 0) ||\n                  a.priority - b.priority\n              : (b.priority === 0) - (a.priority === 0) ||\n                  b.priority - a.priority;\n          case SortButtonLabel.ISDONE:\n            return sortAscending ? b.isdone - a.isdone : a.isdone - b.isdone;\n          default:\n            return 0;\n        }\n      }\n    });\n    updateTasklist(tasklist);\n\n    // Below is necessary to stop eslint from complaining about\n    // a missing dependency for useEffect().\n    // The missing dependency is the tasklist being sorted, but\n    // having it in the dep array causes an infinite loop.\n    // Not having it there seems to work just fine (so far).\n\n    // eslint-disable-next-line\n  }, [sortAscending, previouslyClicked, updateTasklist]);\n\n  const handleClick = (buttonLabel) => {\n    if (buttonLabel === previouslyClicked) {\n      setSortAscending(!sortAscending);\n    } else {\n      setSortAscending(true);\n    }\n\n    setPreviouslyClicked(buttonLabel);\n  };\n\n  return (\n    <div>\n      <ul className='sortbuttonlist'>\n        Sort by:\n        <li>\n          <SortButton label='Date' onClick={handleClick} />\n        </li>\n        <li>\n          <SortButton label='Name' onClick={handleClick} />\n        </li>\n        <li>\n          <SortButton label='Priority' onClick={handleClick} />\n        </li>\n        <li>\n          <SortButton label='Completed' onClick={handleClick} />\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default SortButtonListComponent;\n","import React from 'react';\r\nimport './scss/Main.scss';\r\n// Import components\r\nimport TodoForm from './components/TodoForm';\r\nimport ListComponent from './components/ListComponent';\r\nimport SortComponent from './components/SortComponent';\r\n\r\nconst todoFormButtonLabel = {\r\n  ADD: 'Add',\r\n  EDIT: 'Edit',\r\n};\r\n\r\n// Todo:\r\n// Cleanup\r\n// Rename a bunch of functions and variables for clarity?\r\n// Start extracting components where necessary, again for clarity.\r\n// Move component specific functions under objects?\r\n//    App is becoming cluttered, not to mention passing props\r\n//    to child components.\r\n// More styling for collapsible tasks. (buttons etc.)\r\n// Confirmation dialog for delete button?\r\n\r\n// NOTE! todoFormState now generates random id for added items for\r\n// item removal to work.\r\n// Refactor this when using database.\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n      todoFormState: {\r\n        name: '',\r\n        date: '',\r\n        priority: '',\r\n        list: '',\r\n        descritpion: '',\r\n        isdone: false,\r\n        id: Math.random() * 1000,\r\n      },\r\n      todoFormSubmitButtonLabel: todoFormButtonLabel.ADD,\r\n      collapsibleStates: [],\r\n    };\r\n  }\r\n\r\n  handleTodoFormInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    let todoFormState = { ...this.state.todoFormState };\r\n    todoFormState[name] = value;\r\n    this.setState({\r\n      todoFormState: todoFormState,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (todo) => {\r\n    let todos = [...this.state.todos];\r\n    let collapsibleStates = [...this.state.collapsibleStates];\r\n    if (this.state.todoFormSubmitButtonLabel === todoFormButtonLabel.EDIT) {\r\n      const indexOfEditedTodo = todos.findIndex(\r\n        (element) => element.id === todo.id\r\n      );\r\n      todos[indexOfEditedTodo] = todo;\r\n    } else {\r\n      const obj = { id: todo.id, isOpen: false };\r\n      collapsibleStates = collapsibleStates.concat(obj);\r\n      todos = todos.concat(todo);\r\n    }\r\n    this.setState({\r\n      todos: todos,\r\n      todoFormState: this.resetTodoFormState(),\r\n      todoFormSubmitButtonLabel: todoFormButtonLabel.ADD,\r\n      collapsibleStates: collapsibleStates,\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      todoFormState: this.resetTodoFormState(),\r\n      todoFormSubmitButtonLabel: todoFormButtonLabel.ADD,\r\n    });\r\n  };\r\n\r\n  resetTodoFormState = () => {\r\n    let todoformstate = { ...this.state.todoFormState };\r\n    todoformstate.name = '';\r\n    todoformstate.date = '';\r\n    todoformstate.priority = '';\r\n    todoformstate.list = '';\r\n    todoformstate.description = '';\r\n    todoformstate.isdone = false;\r\n    todoformstate.id = Math.random() * 1000;\r\n    return todoformstate;\r\n  };\r\n\r\n  handleSort = (sortedTodos) => {\r\n    this.setState({ todos: sortedTodos });\r\n  };\r\n\r\n  todoHandler = {\r\n    fetch: (lists, tasks) => {\r\n      // console.log({ lists, tasks });\r\n      const getListName = (listid) => {\r\n        const list = lists.find((item) => {\r\n          return item.id === listid;\r\n        });\r\n        return list.name;\r\n      };\r\n\r\n      const todos = tasks.map((item) => {\r\n        item = {\r\n          id: item.id,\r\n          name: item.name,\r\n          date: item.date_deadline,\r\n          priority: item.priority,\r\n          listid: item.listid,\r\n          list: getListName(item.listid),\r\n          description: item.description,\r\n          isdone: item.is_done,\r\n          created: item.date_created,\r\n        };\r\n        return item;\r\n      });\r\n      let collapsibleStates = [...this.state.collapsibleStates];\r\n      for (const element of todos) {\r\n        const collapsibleStateObject = { id: element.id, isOpen: false };\r\n        collapsibleStates = collapsibleStates.concat(collapsibleStateObject);\r\n      }\r\n\r\n      this.setState({ todos: todos, collapsibleStates: collapsibleStates });\r\n    },\r\n    collapse: (todoId) => {\r\n      let collapsibleStates = [...this.state.collapsibleStates];\r\n      collapsibleStates.forEach((element) => {\r\n        element.isOpen = todoId === element.id ? !element.isOpen : false;\r\n      });\r\n      this.setState({ collapsibleStates: collapsibleStates });\r\n    },\r\n\r\n    // Filtering happens here where we have access to whole list\r\n    // of todos\r\n    delete: (todoId) => {\r\n      const temp = this.state.todos.filter((el) => {\r\n        // console.log(el);\r\n        return el.id !== todoId;\r\n      });\r\n      this.setState({\r\n        todos: temp,\r\n      });\r\n    },\r\n\r\n    // Filtering happens here where we have access to whole list\r\n    // of todos\r\n    // NOTE: unmarking marked todos doesn't work for some reason\r\n    complete: (todoId) => {\r\n      console.log(todoId);\r\n      const temp = [...this.state.todos];\r\n      let idx = temp.findIndex((x) => x.id === todoId);\r\n      temp[idx] = {\r\n        ...temp[idx],\r\n        isdone: !temp[idx].isdone,\r\n      };\r\n      console.log(temp);\r\n      this.setState({\r\n        todos: temp,\r\n      });\r\n    },\r\n\r\n    edit: (todoToEdit) => {\r\n      this.setState({\r\n        todoFormState: todoToEdit,\r\n        todoFormSubmitButtonLabel: todoFormButtonLabel.EDIT,\r\n      });\r\n    },\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='app'>\r\n          <div className='form'>\r\n            <TodoForm\r\n              submitButtonLabel={this.state.todoFormSubmitButtonLabel}\r\n              todoFormState={this.state.todoFormState}\r\n              onInputChange={this.handleTodoFormInputChange}\r\n              onFormSubmit={this.handleSubmit}\r\n              onFormCancel={this.handleCancel}\r\n            />\r\n          </div>\r\n          <div className='todo-list'>\r\n            <SortComponent\r\n              tasklist={this.state.todos}\r\n              updateTasklist={this.handleSort}\r\n            />\r\n            <ListComponent\r\n              todos={this.state.todos}\r\n              todoHandler={this.todoHandler}\r\n              collapsibleStates={this.state.collapsibleStates}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}